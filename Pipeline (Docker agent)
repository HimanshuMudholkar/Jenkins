- Plugins to install :- Docker pipeline ; Pipeline:AWS steps

- Go to => Dashboard -> Manage Jenkins -> Credentials -> System -> Global credentials (unrestricted) => AWS Credentials-> ID = aws-creds

- Install docker on jenkins instance
- usermod -aG docker Jenkins
- chmod 666 /var/run/docker.sock

vim Dockerfile

FROM ubuntu
RUN apt-get update -y
RUN apt install unzip -y
RUN apt install curl -y
# aws cli
RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && unzip awscliv2.zip
RUN ./aws/install && aws --version
RUN aws configure set aws_access_key_id AKIAY3TJRGJBB2JU2BUI \
&& aws configure set aws_secret_access_key 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 \
&& aws configure set default.region us-east-1
# kubectl
RUN curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
RUN chmod +x kubectl
RUN mv kubectl /usr/local/bin/
# eksctl
RUN curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
RUN mv /tmp/eksctl /usr/local/bin

- docker build -t myimg .
- docker images
- docker login
- docker tag myimg himanshumudholkar/eksctl:v1
- docker images 
- docker push himanshumudholkar/eksctl:v1   
 

pipeline {    
    agent {
        docker {
            image 'himanshumudholkar/eksctl:v1'
            reuseNode true
        }
    }
     parameters { // validate the string EKS_CLUSTER_NAME parameter  
        
        choice(name: 'EKS_AWS_REGION', description: 'Provide aws region', choices: ['us-east-1', 'us-east-2', 'us-west-2', 'ap-east-1', 'ap-south-1', 'ap-northeast-2', 'ap-southeast-1', 'ap-southeast-2', 'ap-northeast-1', 'ca-central-1', 'eu-central-1', 'eu-west-1', 'eu-west-2', 'eu-west-3', 'eu-north-1', 'me-south-1', 'sa-east-1'])
        string(name: "EKS_CLUSTER_NAME", defaultValue: "", description: "Provide the name of cluster")
        choice(name: 'EKS_NODE_COUNT', description: 'Provide the node count', choices: ['1', '2', '3'])
    }

    stages {
        stage ('cluster-create'){
            steps {
            withAWS(credentials: 'aws-creds') {
                sh (script: '''
                    eksctl create cluster --name=${EKS_CLUSTER_NAME} --region=${EKS_AWS_REGION} --version=${EKS_CLUSTER_VERSION} --nodes ${EKS_NODE_COUNT}   --managed
                    ''')    
                 }
            }
        }
    } 

}
